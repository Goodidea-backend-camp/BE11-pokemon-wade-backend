openapi: 3.0.3
info:
  title: Laravel
  description: ''
  version: 1.0.0
servers:
  -
    url: 'https://wade.monster.com'
paths:
  /api/abilities:
    get:
      summary: 性格列表
      operationId: ''
      description: ''
      parameters: []
      responses:
        401:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  message: Unauthenticated.
                properties:
                  message:
                    type: string
                    example: Unauthenticated.
      tags:
        - Ability
    post:
      summary: 性格新增
      operationId: ''
      description: ''
      parameters: []
      responses: {  }
      tags:
        - Ability
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                name:
                  type: string
                  description: 'Must not be greater than 255 characters.'
                  example: znuzvugb
              required:
                - name
  '/api/abilities/{ability_id}':
    patch:
      summary: 性格修改
      operationId: ''
      description: ''
      parameters: []
      responses: {  }
      tags:
        - Ability
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                name:
                  type: string
                  description: 'Must not be greater than 255 characters.'
                  example: krvtiq
              required:
                - name
    parameters:
      -
        in: path
        name: ability_id
        description: 'The ID of the ability.'
        example: 1
        required: true
        schema:
          type: integer
  /api/Auth/login:
    post:
      summary: 登入
      operationId: ''
      description: ''
      parameters: []
      responses: {  }
      tags:
        - Auth
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                email:
                  type: string
                  description: 'Must be a valid email address.'
                  example: lucile59@example.net
                password:
                  type: string
                  description: ''
                  example: 'A/xeh.*.477FH'
              required:
                - email
                - password
      security: []
  /api/Auth/logout:
    post:
      summary: 登出
      operationId: ''
      description: ''
      parameters: []
      responses: {  }
      tags:
        - Auth
      security: []
  '/api/email/verify/{id}/{hash}':
    get:
      summary: 註冊email驗證信確認
      operationId: email
      description: ''
      parameters: []
      responses:
        404:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  error: 'Resource not found'
                properties:
                  error:
                    type: string
                    example: 'Resource not found'
      tags:
        - Auth
      security: []
    parameters:
      -
        in: path
        name: id
        description: 'The ID of the verify.'
        example: numquam
        required: true
        schema:
          type: string
      -
        in: path
        name: hash
        description: ''
        example: illum
        required: true
        schema:
          type: string
  '/api/checkVerificationStatus/{email}':
    get:
      summary: 確認user表註冊驗證信狀態
      operationId: user
      description: ''
      parameters: []
      responses:
        404:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  error: 'User not found'
                properties:
                  error:
                    type: string
                    example: 'User not found'
      tags:
        - Auth
      security: []
    parameters:
      -
        in: path
        name: email
        description: ''
        example: pollich.onie@example.com
        required: true
        schema:
          type: string
  /api/cart_items:
    get:
      summary: 顯示購物車商品
      operationId: ''
      description: ''
      parameters: []
      responses:
        401:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  message: Unauthenticated.
                properties:
                  message:
                    type: string
                    example: Unauthenticated.
      tags:
        - CartItem
    post:
      summary: 加入購物車
      operationId: ''
      description: ''
      parameters: []
      responses: {  }
      tags:
        - CartItem
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                quantity:
                  type: string
                  description: ''
                  example: null
                race_id:
                  type: integer
                  description: ''
                  example: 19
              required:
                - race_id
  /api/cart_items/total_price:
    get:
      summary: 購物車總價格計算
      operationId: ''
      description: ''
      parameters: []
      responses:
        401:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  message: Unauthenticated.
                properties:
                  message:
                    type: string
                    example: Unauthenticated.
      tags:
        - CartItem
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                cart_item_ids:
                  type: object
                  description: ''
                  example: []
                  properties: {  }
              required:
                - cart_item_ids
  '/api/cart_items/{cart_item_id}':
    put:
      summary: 購物車更新
      operationId: ''
      description: ''
      parameters: []
      responses: {  }
      tags:
        - CartItem
      requestBody:
        required: false
        content:
          application/json:
            schema:
              type: object
              properties:
                quantity:
                  type: string
                  description: ''
                  example: null
    delete:
      summary: 購物車刪除
      operationId: ''
      description: ''
      parameters: []
      responses: {  }
      tags:
        - CartItem
    parameters:
      -
        in: path
        name: cart_item_id
        description: 'The ID of the cart item.'
        example: 5
        required: true
        schema:
          type: integer
  /api/natures:
    get:
      summary: 性格詳情
      operationId: ''
      description: ''
      parameters: []
      responses:
        401:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  message: Unauthenticated.
                properties:
                  message:
                    type: string
                    example: Unauthenticated.
      tags:
        - Nature
    post:
      summary: 性格新增
      operationId: ''
      description: ''
      parameters: []
      responses: {  }
      tags:
        - Nature
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                name:
                  type: string
                  description: 'Must not be greater than 255 characters.'
                  example: wivvbm
              required:
                - name
  '/api/natures/{nature_id}':
    patch:
      summary: 性格修改
      operationId: ''
      description: ''
      parameters: []
      responses: {  }
      tags:
        - Nature
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                name:
                  type: string
                  description: 'Must not be greater than 255 characters.'
                  example: wghrqbnmztihlgvtlsmabc
              required:
                - name
    parameters:
      -
        in: path
        name: nature_id
        description: 'The ID of the nature.'
        example: 1
        required: true
        schema:
          type: integer
  /api/orders:
    post:
      summary: 訂單新增
      operationId: ''
      description: ''
      parameters: []
      responses: {  }
      tags:
        - Order
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                total_price:
                  type: integer
                  description: 'Must be at least 1.'
                  example: 54
                payment_method:
                  type: string
                  description: ''
                  example: credit_card
                  enum:
                    - credit_card
                    - cash_on_delivery
                payment_status:
                  type: string
                  description: ''
                  example: unpaid
                  enum:
                    - paid
                    - unpaid
                    - canceled
              required:
                - total_price
                - payment_method
                - payment_status
    get:
      summary: 訂單列表
      operationId: ''
      description: ''
      parameters: []
      responses:
        401:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  message: Unauthenticated.
                properties:
                  message:
                    type: string
                    example: Unauthenticated.
      tags:
        - Order
  '/api/orders/{order_id}/order_details':
    get:
      summary: 訂單細節列表
      operationId: ''
      description: ''
      parameters: []
      responses:
        401:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  message: Unauthenticated.
                properties:
                  message:
                    type: string
                    example: Unauthenticated.
      tags:
        - OrderDetail
    parameters:
      -
        in: path
        name: order_id
        description: 'The ID of the order.'
        example: 16
        required: true
        schema:
          type: integer
  /api/orders_details:
    post:
      summary: 訂單細節新增
      operationId: ''
      description: ''
      parameters: []
      responses: {  }
      tags:
        - OrderDetail
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                order_id:
                  type: integer
                  description: ''
                  example: 12
                race_id:
                  type: integer
                  description: ''
                  example: 1
              required:
                - order_id
                - race_id
  /api/payments:
    post:
      summary: 請求藍星金流結帳頁面
      operationId: ''
      description: ''
      parameters: []
      responses: {  }
      tags:
        - Payment
  /api/payResult:
    post:
      summary: 藍星金流結帳完後結果返回確認，寄通知信給使用者
      operationId: ''
      description: ''
      parameters: []
      responses: {  }
      tags:
        - PaymentResponse
  /api/pokemons:
    get:
      summary: 使用者寶可夢的列表
      operationId: ''
      description: ''
      parameters: []
      responses:
        401:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  message: Unauthenticated.
                properties:
                  message:
                    type: string
                    example: Unauthenticated.
      tags:
        - Pokemons
    post:
      summary: 使用者寶可夢的新增
      operationId: ''
      description: ''
      parameters: []
      responses: {  }
      tags:
        - Pokemons
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                name:
                  type: string
                  description: 'The name of the pokemon. Must not be greater than 15 characters.'
                  example: Pikachu
                race_id:
                  type: integer
                  description: 'The ID of the race for the pokemon.'
                  example: 1
                ability_id:
                  type: integer
                  description: 'The ID of the ability for the pokemon.'
                  example: 1
                nature_id:
                  type: integer
                  description: 'The ID of the nature for the pokemon.'
                  example: 1
                level:
                  type: integer
                  description: 'The level for the pokemon. Must be at least 1. Must not be greater than 100.'
                  example: 1
                skills:
                  type: array
                  description: ''
                  example:
                    - 11
                  items:
                    type: integer
              required:
                - name
                - race_id
                - ability_id
                - nature_id
                - level
  '/api/pokemons/{id}':
    get:
      summary: 使用者寶可夢的詳情
      operationId: ''
      description: ''
      parameters: []
      responses:
        401:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  message: Unauthenticated.
                properties:
                  message:
                    type: string
                    example: Unauthenticated.
      tags:
        - Pokemons
    put:
      summary: 使用者寶可夢的修改
      operationId: ''
      description: ''
      parameters: []
      responses: {  }
      tags:
        - Pokemons
      requestBody:
        required: false
        content:
          application/json:
            schema:
              type: object
              properties:
                name:
                  type: string
                  description: 'The name of the pokemon. Must not be greater than 15 characters.'
                  example: Pikachu
                race_id:
                  type: integer
                  description: 'The ID of the race for the pokemon.'
                  example: 1
                ability_id:
                  type: integer
                  description: 'The ID of the ability for the pokemon.'
                  example: 1
                nature_id:
                  type: integer
                  description: 'The ID of the nature for the pokemon.'
                  example: 1
                level:
                  type: integer
                  description: 'The level for the pokemon. Must be at least 1. Must not be greater than 100.'
                  example: 1
                skills:
                  type: array
                  description: ''
                  example: null
                  items:
                    type: string
    delete:
      summary: 使用者寶可夢的刪除
      operationId: ''
      description: ''
      parameters: []
      responses: {  }
      tags:
        - Pokemons
    parameters:
      -
        in: path
        name: id
        description: 'The ID of the pokemon.'
        example: 15
        required: true
        schema:
          type: integer
  '/api/pokemons/{pokemon_id}/evolution':
    put:
      summary: 使用者寶可夢的進化判斷
      operationId: ''
      description: ''
      parameters: []
      responses: {  }
      tags:
        - Pokemons
    parameters:
      -
        in: path
        name: pokemon_id
        description: 'The ID of the pokemon.'
        example: 15
        required: true
        schema:
          type: integer
  /api/races:
    get:
      summary: 種族列表
      operationId: ''
      description: ''
      parameters: []
      responses:
        401:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  message: Unauthenticated.
                properties:
                  message:
                    type: string
                    example: Unauthenticated.
      tags:
        - Race
  '/api/races/{race_id}/evolutionLevel':
    get:
      summary: 取得種族進化等級
      operationId: ''
      description: ''
      parameters: []
      responses:
        401:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  message: Unauthenticated.
                properties:
                  message:
                    type: string
                    example: Unauthenticated.
      tags:
        - Race
    parameters:
      -
        in: path
        name: race_id
        description: 'The ID of the race.'
        example: 1
        required: true
        schema:
          type: integer
  '/api/races/{race_id}/skill':
    get:
      summary: 取得種族能夠學的技能
      operationId: ''
      description: ''
      parameters: []
      responses:
        401:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  message: Unauthenticated.
                properties:
                  message:
                    type: string
                    example: Unauthenticated.
      tags:
        - Race
    parameters:
      -
        in: path
        name: race_id
        description: 'The ID of the race.'
        example: 1
        required: true
        schema:
          type: integer
  /api/register:
    post:
      summary: '註冊,寄註冊信'
      operationId: ''
      description: ''
      parameters: []
      responses: {  }
      tags:
        - Register
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                name:
                  type: string
                  description: 'Must not be greater than 255 characters.'
                  example: hdaqoyfxdrbsojacchd
                email:
                  type: string
                  description: 'Must be a valid email address. Must not be greater than 255 characters.'
                  example: caleb.bernhard@example.net
                password:
                  type: string
                  description: 'Must be at least 6 characters.'
                  example: '3[Eju4'
              required:
                - name
                - email
                - password
      security: []
  /api/user:
    get:
      summary: 使用者個人資訊
      operationId: ''
      description: ''
      parameters: []
      responses:
        200:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  name: 'John Doe'
                  photo: 'https://example.com/photo.jpg'
                  email: johndoe@example.com
                properties:
                  name:
                    type: string
                    example: 'John Doe'
                  photo:
                    type: string
                    example: 'https://example.com/photo.jpg'
                  email:
                    type: string
                    example: johndoe@example.com
        404:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  error: 'User not found'
                properties:
                  error:
                    type: string
                    example: 'User not found'
      tags:
        - User
    post:
      summary: 更新使用者資訊
      operationId: ''
      description: '主要還會產生一個presigned URL來讓使用者瀏覽器去上傳圖片'
      parameters: []
      responses: {  }
      tags:
        - User
      requestBody:
        required: true
        content:
          multipart/form-data:
            schema:
              type: object
              properties:
                userPhoto:
                  type: string
                  format: binary
                  description: 'Must be an image. Must not be greater than 2048 kilobytes.'
                name:
                  type: string
                  description: 'Must not be greater than 255 characters.'
                  example: wfgwbfmtyp
              required:
                - name
tags:
  -
    name: Ability
    description: 'Operations related to abilities.'
  -
    name: Auth
    description: 'Operations related to auth.'
  -
    name: CartItem
    description: 'Operations related to cartItems.'
  -
    name: Nature
    description: 'Operations related to natures.'
  -
    name: Order
    description: 'Operations related to orders.'
  -
    name: OrderDetail
    description: 'Operations related to orderDetais.'
  -
    name: Payment
    description: 'Operations related to payments.'
  -
    name: PaymentResponse
    description: "\n此為藍星金流在結帳完之後會通知後台的，接收結果用的API"
  -
    name: Pokemons
    description: 'Operations related to pokemons.'
  -
    name: Race
    description: "Operations related to races.\n這裡的種族就是寶可夢的意思"
  -
    name: Register
    description: 'Operations related to register.'
  -
    name: User
    description: 'Operations related to users.'
