openapi: 3.0.3
info:
  title: Laravel
  description: ''
  version: 1.0.0
servers:
  -
    url: 'http://localhost'
paths:
  /api/abilities:
    get:
      summary: ''
      operationId: getApiAbilities
      description: ''
      parameters: []
      responses:
        401:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  message: Unauthenticated.
                properties:
                  message:
                    type: string
                    example: Unauthenticated.
      tags:
        - Ability
      security: []
    post:
      summary: ''
      operationId: postApiAbilities
      description: ''
      parameters: []
      responses: {  }
      tags:
        - Ability
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                name:
                  type: string
                  description: 'Must not be greater than 255 characters.'
                  example: ojsnkrelbbzrvtdgs
              required:
                - name
      security: []
  '/api/abilities/{ability_id}':
    patch:
      summary: ''
      operationId: patchApiAbilitiesAbility_id
      description: ''
      parameters: []
      responses: {  }
      tags:
        - Ability
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                name:
                  type: string
                  description: 'Must not be greater than 255 characters.'
                  example: xtkyxjprfhhesuc
              required:
                - name
      security: []
    parameters:
      -
        in: path
        name: ability_id
        description: 'The ID of the ability.'
        example: 1
        required: true
        schema:
          type: integer
  '/api/users/{user_id}/status':
    patch:
      summary: ''
      operationId: patchApiUsersUser_idStatus
      description: ''
      parameters: []
      responses: {  }
      tags:
        - Endpoints
      security: []
    parameters:
      -
        in: path
        name: user_id
        description: 'The ID of the user.'
        example: 3
        required: true
        schema:
          type: integer
  '/api/users/{user}/changePassword':
    patch:
      summary: ''
      operationId: patchApiUsersUserChangePassword
      description: ''
      parameters: []
      responses: {  }
      tags:
        - Endpoints
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                current_password:
                  type: string
                  description: ''
                  example: sunt
                new_password:
                  type: string
                  description: 'Must be at least 6 characters.'
                  example: sffptmhchhrirmdnrkejlwfksbsflkhjwhiqmfuannrhhxftspwdkhdxgmbzhnqoam
              required:
                - current_password
                - new_password
      security: []
    parameters:
      -
        in: path
        name: user
        description: 'The user.'
        example: 3
        required: true
        schema:
          type: integer
  /api/Auth/logout:
    post:
      summary: ''
      operationId: postApiAuthLogout
      description: ''
      parameters: []
      responses: {  }
      tags:
        - Endpoints
      security: []
  /api/register:
    post:
      summary: ''
      operationId: postApiRegister
      description: ''
      parameters: []
      responses: {  }
      tags:
        - Endpoints
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                name:
                  type: string
                  description: 'Must not be greater than 255 characters.'
                  example: kydo
                email:
                  type: string
                  description: 'Must be a valid email address. Must not be greater than 255 characters.'
                  example: delia92@example.net
                password:
                  type: string
                  description: 'Must be at least 6 characters.'
                  example: '.C:(l83neH!r>%._wO+a'
              required:
                - name
                - email
                - password
      security: []
  /api/Auth/login:
    post:
      summary: ''
      operationId: postApiAuthLogin
      description: ''
      parameters: []
      responses: {  }
      tags:
        - Endpoints
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                email:
                  type: string
                  description: 'Must be a valid email address.'
                  example: heller.tatyana@example.com
                password:
                  type: string
                  description: ''
                  example: 2-<dT0co
              required:
                - email
                - password
      security: []
  /api/natures:
    get:
      summary: ''
      operationId: getApiNatures
      description: ''
      parameters: []
      responses:
        401:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  message: Unauthenticated.
                properties:
                  message:
                    type: string
                    example: Unauthenticated.
      tags:
        - Nature
      security: []
    post:
      summary: ''
      operationId: postApiNatures
      description: ''
      parameters: []
      responses: {  }
      tags:
        - Nature
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                name:
                  type: string
                  description: 'Must not be greater than 255 characters.'
                  example: bziluojxihlzs
              required:
                - name
      security: []
  '/api/natures/{nature_id}':
    patch:
      summary: ''
      operationId: patchApiNaturesNature_id
      description: ''
      parameters: []
      responses: {  }
      tags:
        - Nature
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                name:
                  type: string
                  description: 'Must not be greater than 255 characters.'
                  example: thyiwbtpdzbtjdaigzacdhyk
              required:
                - name
      security: []
    parameters:
      -
        in: path
        name: nature_id
        description: 'The ID of the nature.'
        example: 1
        required: true
        schema:
          type: integer
  /api/pokemons:
    get:
      summary: 'Create a new user.'
      operationId: createANewUser
      description: 'This endpoint allows you to show all pokemons.'
      parameters: []
      responses:
        401:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  message: Unauthenticated.
                properties:
                  message:
                    type: string
                    example: Unauthenticated.
      tags:
        - Pokemons
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                first_name:
                  type: string
                  description: 'The first name of the user.'
                  example: non
                last_name:
                  type: string
                  description: 'The last name of the user.'
                  example: sit
                email:
                  type: string
                  description: 'The email address of the user.'
                  example: matt41@example.com
              required:
                - first_name
                - last_name
                - email
    post:
      summary: ''
      operationId: postApiPokemons
      description: ''
      parameters: []
      responses: {  }
      tags:
        - Pokemons
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                name:
                  type: string
                  description: 'Must not be greater than 15 characters.'
                  example: wpikbj
                race_id:
                  type: integer
                  description: ''
                  example: 7
                ability_id:
                  type: integer
                  description: ''
                  example: 19
                nature_id:
                  type: integer
                  description: ''
                  example: 12
                level:
                  type: integer
                  description: 'Must be at least 1. Must not be greater than 100.'
                  example: 10
                skills:
                  type: array
                  description: ''
                  example:
                    - 13
                  items:
                    type: integer
              required:
                - name
                - race_id
                - ability_id
                - nature_id
                - level
      security: []
  '/api/pokemons/{id}':
    get:
      summary: ''
      operationId: getApiPokemonsId
      description: ''
      parameters: []
      responses:
        401:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  message: Unauthenticated.
                properties:
                  message:
                    type: string
                    example: Unauthenticated.
      tags:
        - Pokemons
      security: []
    put:
      summary: ''
      operationId: putApiPokemonsId
      description: ''
      parameters: []
      responses: {  }
      tags:
        - Pokemons
      requestBody:
        required: false
        content:
          application/json:
            schema:
              type: object
              properties:
                name:
                  type: string
                  description: 'The name of the pokemon. Must not be greater than 15 characters.'
                  example: Pikachu
                race_id:
                  type: integer
                  description: 'The ID of the race for the pokemon.'
                  example: 1
                ability_id:
                  type: integer
                  description: 'The ID of the ability for the pokemon.'
                  example: 1
                nature_id:
                  type: integer
                  description: 'The ID of the nature for the pokemon.'
                  example: 1
                level:
                  type: integer
                  description: 'The level for the pokemon. Must be at least 1. Must not be greater than 100.'
                  example: 1
                skills:
                  type: array
                  description: ''
                  example: null
                  items:
                    type: string
      security: []
    delete:
      summary: ''
      operationId: deleteApiPokemonsId
      description: ''
      parameters: []
      responses: {  }
      tags:
        - Pokemons
      security: []
    parameters:
      -
        in: path
        name: id
        description: 'The ID of the pokemon.'
        example: 1
        required: true
        schema:
          type: integer
  '/api/pokemons/{pokemon_id}/evolution':
    put:
      summary: ''
      operationId: putApiPokemonsPokemon_idEvolution
      description: ''
      parameters: []
      responses: {  }
      tags:
        - Pokemons
      security: []
    parameters:
      -
        in: path
        name: pokemon_id
        description: 'The ID of the pokemon.'
        example: 1
        required: true
        schema:
          type: integer
  /api/races:
    get:
      summary: ''
      operationId: getApiRaces
      description: ''
      parameters: []
      responses:
        401:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  message: Unauthenticated.
                properties:
                  message:
                    type: string
                    example: Unauthenticated.
      tags:
        - Race
      security: []
  '/api/races/{race_id}/evolutionLevel':
    get:
      summary: ''
      operationId: getApiRacesRace_idEvolutionLevel
      description: ''
      parameters: []
      responses:
        401:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  message: Unauthenticated.
                properties:
                  message:
                    type: string
                    example: Unauthenticated.
      tags:
        - Race
      security: []
    parameters:
      -
        in: path
        name: race_id
        description: 'The ID of the race.'
        example: 1
        required: true
        schema:
          type: integer
  '/api/races/{race_id}/skill':
    get:
      summary: ''
      operationId: getApiRacesRace_idSkill
      description: ''
      parameters: []
      responses:
        401:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  message: Unauthenticated.
                properties:
                  message:
                    type: string
                    example: Unauthenticated.
      tags:
        - Race
      security: []
    parameters:
      -
        in: path
        name: race_id
        description: 'The ID of the race.'
        example: 1
        required: true
        schema:
          type: integer
tags:
  -
    name: Ability
    description: 'Operations related to abilities.'
  -
    name: Endpoints
    description: ''
  -
    name: Nature
    description: 'Operations related to natures.'
  -
    name: Pokemons
    description: 'Operations related to pokemons.'
  -
    name: Race
    description: 'Operations related to races.'
