## Autogenerated by Scribe. DO NOT MODIFY.

name: Auth
description: 'Operations related to auth.'
endpoints:
  -
    httpMethods:
      - POST
    uri: api/Auth/login
    metadata:
      groupName: Auth
      groupDescription: 'Operations related to auth.'
      subgroup: ''
      subgroupDescription: ''
      title: 登入
      description: 此端點允許用戶使用他們的電子郵件和密碼來登入系統，並返回一個JWT令牌。
      authenticated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
      Authorization: 'Bearer '
    urlParameters: []
    cleanUrlParameters: []
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters:
      email:
        name: email
        description: 用戶的電子郵件地址。example：user@example.com
        required: true
        example: penelope.senger@example.org
        type: string
        enumValues: []
        custom: []
      password:
        name: password
        description: 用戶的密碼。
        required: true
        example: e123456
        type: string
        enumValues: []
        custom: []
    cleanBodyParameters:
      email: penelope.senger@example.org
      password: e123456
    fileParameters: []
    responses:
      -
        status: 200
        content: |-
          {
            "message": "Login successful",
            "token": "Generated JWT token",
            "user": "Authenticated user object"
          }
        headers: []
        description: ''
        custom: []
      -
        status: 401
        content: |-
          {
            "error": "Invalid credentials"
          }
        headers: []
        description: ''
        custom: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - POST
    uri: api/Auth/logout
    metadata:
      groupName: Auth
      groupDescription: 'Operations related to auth.'
      subgroup: ''
      subgroupDescription: ''
      title: 登出
      description: 此端點允許已經登入的用戶登出，它會使當前的JWT令牌失效。
      authenticated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
      Authorization: 'Bearer '
    urlParameters: []
    cleanUrlParameters: []
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses:
      -
        status: 200
        content: |-
          {
            "message": "Successfully logged out"
          }
        headers: []
        description: ''
        custom: []
      -
        status: 500
        content: |-
          {
            "message": "Failed to logout"
          }
        headers: []
        description: ''
        custom: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - GET
    uri: 'api/email/verify/{id}/{hash}'
    metadata:
      groupName: Auth
      groupDescription: 'Operations related to auth.'
      subgroup: ''
      subgroupDescription: ''
      title: 註冊email驗證信確認
      description: |-
        電子郵件驗證確認

        此端點用於確認用戶的電子郵件驗證(和前端較無關聯）。
        它會比對提供的hash值和用戶的電子郵件生成的hash值。
        如果驗證成功，該用戶的電子郵件將被標記為已驗證，並且將觸發一個已驗證的事件。
        系統會將email驗證的日期存入資料庫
      authenticated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
      Authorization: 'Bearer '
    urlParameters:
      id:
        name: id
        description: 'The ID of the verify.'
        required: true
        example: autem
        type: string
        enumValues: []
        custom: []
      hash:
        name: hash
        description: ''
        required: true
        example: voluptatum
        type: string
        enumValues: []
        custom: []
    cleanUrlParameters:
      id: autem
      hash: voluptatum
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses:
      -
        status: 200
        content: |-
          {
            "message": "Email verified successfully."
          }
        headers: []
        description: ''
        custom: []
      -
        status: 200
        content: |-
          {
            "message": "Email already verified."
          }
        headers: []
        description: ''
        custom: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - GET
    uri: 'api/checkVerificationStatus/{email}'
    metadata:
      groupName: Auth
      groupDescription: 'Operations related to auth.'
      subgroup: ''
      subgroupDescription: ''
      title: 確認user表註冊驗證信狀態
      description: |-
        此API用來讓前端判斷目前的使用者是否為email已驗證狀態
        目前採用longpoling的方式，所以後端這裡會去輪詢資料庫查看狀態。
        如果請求超時會返回false給使用者
      authenticated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
      Authorization: 'Bearer '
    urlParameters:
      email:
        name: email
        description: ''
        required: true
        example: bpfannerstill@example.org
        type: string
        enumValues: []
        custom: []
    cleanUrlParameters:
      email: bpfannerstill@example.org
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses:
      -
        status: 200
        content: |-
          {
            "isVerified": true/false
          }
        headers: []
        description: ''
        custom: []
      -
        status: 404
        content: |-
          {
            "error": "User not found"
          }
        headers: []
        description: ''
        custom: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
