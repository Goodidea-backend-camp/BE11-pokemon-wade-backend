name: Register
description: 'Operations related to register.'
endpoints:
  -
    httpMethods:
      - POST
    uri: api/register
    metadata:
      groupName: Register
      groupDescription: 'Operations related to register.'
      subgroup: ''
      subgroupDescription: ''
      title: 處理新使用者的註冊並寄送註冊信。
      description: |-
        此方法會驗證輸入的資料，並在成功驗證後在`users`表中創建一個新的使用者紀錄。
        之後，它會觸發一個`Registered`事件，並返回一個成功的響應，包括新創建的使用者的資料。
      authenticated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
      Authorization: 'Bearer '
    urlParameters: []
    cleanUrlParameters: []
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters:
      name:
        name: name
        description: '使用者的名字。示例：John Doe'
        required: true
        example: et
        type: string
        enumValues: []
        custom: []
      email:
        name: email
        description: 使用者的電子郵件地址。必須是唯一的並且符合電子郵件格式。示例：john.doe@example.com
        required: true
        example: garrison.jakubowski@example.org
        type: string
        enumValues: []
        custom: []
      password:
        name: password
        description: 使用者的密碼。必須至少有6個字符長並且與`password_confirmation`參數匹配。示例：password123
        required: true
        example: '1+Y)IbYZ&H8^]'
        type: string
        enumValues: []
        custom: []
      password_confirmation:
        name: password_confirmation
        description: 密碼確認。必須與`password`參數匹配。示例：password123
        required: true
        example: sed
        type: string
        enumValues: []
        custom: []
    cleanBodyParameters:
      name: et
      email: garrison.jakubowski@example.org
      password: '1+Y)IbYZ&H8^]'
      password_confirmation: sed
    fileParameters: []
    responses:
      -
        status: 200
        content: |-
          {
            "message": "Password updated for the existing Google user.",

          }
        headers: []
        description: ''
        custom: []
      -
        status: 201
        content: |-
          {
            "message": "User registered successfully!",

          }
        headers: []
        description: ''
        custom: []
      -
        status: 409
        content: |-
          {
            "message": "Email already registered.",

          }
        headers: []
        description: ''
        custom: []
      -
        status: 422
        content: |-
          {
            "message": "The given data was invalid.",
            "errors": {
              "email": [
                "The email has already been taken."
              ],
              // other validation errors...
            }
          }
        headers: []
        description: ''
        custom: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - GET
    uri: 'api/email/verify/{id}/{hash}'
    metadata:
      groupName: Register
      groupDescription: 'Operations related to register.'
      subgroup: ''
      subgroupDescription: ''
      title: 註冊email驗證信確認
      description: |-
        電子郵件驗證確認

        此端點用於確認用戶的電子郵件驗證(和前端較無關聯）。
        它會比對提供的hash值和用戶的電子郵件生成的hash值。
        如果驗證成功，該用戶的電子郵件將被標記為已驗證，並且將觸發一個已驗證的事件。
        系統會將email驗證的日期存入資料庫
      authenticated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
      Authorization: 'Bearer '
    urlParameters:
      id:
        name: id
        description: 'The ID of the verify.'
        required: true
        example: est
        type: string
        enumValues: []
        custom: []
      hash:
        name: hash
        description: ''
        required: true
        example: sed
        type: string
        enumValues: []
        custom: []
    cleanUrlParameters:
      id: est
      hash: sed
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses:
      -
        status: 200
        content: |-
          {
            "message": "Email verified successfully."
          }
        headers: []
        description: ''
        custom: []
      -
        status: 200
        content: |-
          {
            "message": "Email already verified."
          }
        headers: []
        description: ''
        custom: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
