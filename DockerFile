# 使用官方 Python 基底映像
FROM bitnami/laravel:latest

# 設定工作目錄
WORKDIR /app

# 將當前目錄的內容複製到容器的 /app 目錄中
COPY . .

# 安裝任何所需的套件
# RUN pip install -no-cache-dir -r requirements.txt

# 定義環境變數
ENV PORT=8080

EXPOSE 8080

# 設定容器啟動時執行的命令
# CMD [ "python", "app.py" ]

# 您的 chown 命令或其他需要 root 權限的命令



# 設定容器的開放連接埠
EXPOSE $PORT



# 其他指令，如 RUN, COPY 等


# 环境变量，如果有的话，可以在这里定义，例如：
# ENV APP_ENV=production

# 安装必要的 PHP 扩展和依赖
# RUN apt-get update && apt-get install -y \
#     libfreetype6-dev \
#     libjpeg62-turbo-dev \
#     libpng-dev \
#     && docker-php-ext-install -j$(nproc) iconv \
#     && docker-php-ext-configure gd --with-freetype --with-jpeg \
#     && docker-php-ext-install -j$(nproc) gd \
#     && docker-php-ext-install pdo_mysql

# # 安装 Composer
# COPY --from=composer:latest /usr/bin/composer /usr/bin/composer

# 如果您有本地的应用代码或其他文件需要复制到镜像中，可以使用 COPY 指令
# 例如：
# COPY . /var/www/html

# 如果您的服务需要对外暴露端口，可以使用 EXPOSE 指令
# 例如，如果您的应用运行在 80 端口：
# EXPOSE 80

# CMD 指令定义了容器启动后默认要运行的命令
# 例如，如果您想运行一个 web 服务器：
# CMD ["apache2-foreground"]